{"version":3,"sources":["../../src/utils/mergeFalcorNodes.js"],"names":[],"mappings":"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","file":"mergeFalcorNodes.js","sourcesContent":["export function mergeFalcorNodes(target, source) {\n\n    if (source === target) {\n        return target;\n    } else if (source === null || typeof source !== 'object' || source.$type) {\n        return source;\n    } else if (target === null || typeof target !== 'object') {\n        target = Object.create(Array.prototype);\n    }\n\n    const sourceKey = source.$__key;\n    const targetKey = target.$__key;\n\n    const sourceVersion = source.$__version;\n    const targetVersion = target.$__version;\n\n    const sourceHashCode = sourceKey + '-v' + sourceVersion;\n    const targetHashCode = targetKey + '-v' + targetVersion;\n\n    if (typeof targetHashCode !== 'undefined' && targetHashCode === sourceHashCode) {\n        return target;\n    }\n\n    for (const key in source) {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        if (targetValue === undefined) {\n            target[key] = sourceValue;\n        } else {\n            target[key] = mergeFalcorNodes(targetValue, sourceValue);\n        }\n    }\n\n    if (typeof sourceHashCode === 'undefined') {\n        return target;\n    }\n\n    branchKeyDescriptor.value = sourceKey;\n    branchVersionDescriptor.value = sourceVersion;\n\n    const $__path = source.$__path;\n\n    if (!$__path) {\n        return Object.defineProperties(target, rootBranchDescriptors);\n    }\n\n    branchPathDescriptor.value = $__path;\n\n    const $__refPath = source.$__refPath;\n    const $__toReference = source.$__toReference;\n\n    if (!$__refPath && !$__toReference) {\n        return Object.defineProperties(target, normalBranchDescriptors);\n    }\n\n    branchRefPathDescriptor.value = $__refPath;\n    branchToReferenceDescriptor.value = $__toReference;\n\n    return Object.defineProperties(target, refBranchDescriptors);\n}\n\nconst branchKeyDescriptor = Object.create(null);\nconst branchPathDescriptor = Object.create(null);\nconst branchVersionDescriptor = Object.create(null);\nconst branchRefPathDescriptor = Object.create(null);\nconst branchToReferenceDescriptor = Object.create(null);\n\nconst refBranchDescriptors = Object.create(null);\nconst rootBranchDescriptors = Object.create(null);\nconst normalBranchDescriptors = Object.create(null);\n\nbranchKeyDescriptor.configurable = true;\nbranchPathDescriptor.configurable = true;\nbranchVersionDescriptor.configurable = true;\nbranchRefPathDescriptor.configurable = true;\nbranchToReferenceDescriptor.configurable = true;\n\nrootBranchDescriptors.$__key = branchKeyDescriptor;\nrootBranchDescriptors.$__version = branchVersionDescriptor;\n\nnormalBranchDescriptors.$__key = branchKeyDescriptor;\nnormalBranchDescriptors.$__path = branchPathDescriptor;\nnormalBranchDescriptors.$__version = branchVersionDescriptor;\n\nrefBranchDescriptors.$__key = branchKeyDescriptor;\nrefBranchDescriptors.$__path = branchPathDescriptor;\nrefBranchDescriptors.$__version = branchVersionDescriptor;\nrefBranchDescriptors.$__refPath = branchRefPathDescriptor;\nrefBranchDescriptors.$__toReference = branchToReferenceDescriptor;\n"]}