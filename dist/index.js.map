{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAcA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAhCA,uBAAW,SAAX,CAAqB,MAArB,GAA8B,uBAAW,SAAX,CAAqB,IAAnD,C;;AACA,uBAAW,SAAX,CAAqB,OAArB,GAA+B,uBAAW,SAAX,CAAqB,KAApD;AACA,uBAAW,SAAX,CAAqB,WAArB,GAAmC,uBAAW,SAAX,CAAqB,QAAxD;AACA,uBAAW,SAAX,CAAqB,OAArB,GAA+B,uBAAW,SAAX,CAAqB,WAApD;;AAEA,iBAAQ,SAAR,CAAkB,MAAlB,GAA2B,iBAAQ,SAAR,CAAkB,IAA7C;AACA,iBAAQ,SAAR,CAAkB,OAAlB,GAA4B,iBAAQ,SAAR,CAAkB,KAA9C;AACA,iBAAQ,SAAR,CAAkB,WAAlB,GAAgC,iBAAQ,SAAR,CAAkB,QAAlD;AACA,iBAAQ,SAAR,CAAkB,OAAlB,GAA4B,iBAAQ,SAAR,CAAkB,WAA9C;;AAEA,2BAAa,SAAb,CAAuB,OAAvB,GAAiC,2BAAa,SAAb,CAAuB,WAAxD;;QAwBS,I;QAAM,K;QAAO,K;QAAO,M;QAAQ,S;QAAW,S;QAAW,M;QAAQ,O,GAAA,O;;;AAEnE,SAAS,OAAT,CAAiB,SAAjB,EAA4B,KAA5B,EAAmC;;AAE/B,QAAI,UAAU,KAAd;AACA,QAAI,UAAU,KAAd;AACA,QAAM,QAAQ,IAAI,KAAJ,CAAU,CAAV,CAAd;AACA,QAAM,SAAS,qCAAoB,KAApB,CAAf;AACA,QAAM,6BAA6B,MAAM,KAAN,CAAY,kBAA/C;;AAEA,UAAM,KAAN,CAAY,kBAAZ,GAAiC,YAAW;AACxC,YAAI,OAAJ,EAAa;AAAE,mBAAO,UAAU,IAAjB;AAAwB;AACvC,kBAAU,IAAV;AACA,WAAG;AACC,sBAAU,KAAV;;AAEA,gBAAI,0BAAJ,EAAgC;AAC5B,2CAA2B,IAA3B,CAAgC,IAAhC;AACH;AACD,mBAAO,IAAP,CAAY,QAAQ,IAApB;;AAEH,SARD,QAQQ,YAAY,IARpB;AASH,KAZD;;AAcA,WAAO,IAAI,SAAJ,CAAc,EAAE,cAAF,EAAd,EAA0B,GAA1B,CAA8B,UAAC,QAAD,EAAc;AAC/C,kBAAU,KAAV;AACA,cAAM,CAAN,IAAW,KAAX;AACA,cAAM,CAAN,IAAW,QAAX;AACA,eAAO,KAAP;AACH,KALM,CAAP;AAMH","file":"index.js","sourcesContent":["/** @jsx hJSX */\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nSubscriber.prototype.onNext = Subscriber.prototype.next;\nSubscriber.prototype.onError = Subscriber.prototype.error;\nSubscriber.prototype.onCompleted = Subscriber.prototype.complete;\nSubscriber.prototype.dispose = Subscriber.prototype.unsubscribe;\n\nSubject.prototype.onNext = Subject.prototype.next;\nSubject.prototype.onError = Subject.prototype.error;\nSubject.prototype.onCompleted = Subject.prototype.complete;\nSubject.prototype.dispose = Subject.prototype.unsubscribe;\n\nSubscription.prototype.dispose = Subscription.prototype.unsubscribe;\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/defer';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/combineLatest';\n\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport falcor from 'falcor';\nimport Router from 'falcor-router';\nimport { Model } from './Model';\nimport { Event } from './Event';\nimport { Component } from './Component';\nimport { Container } from './Container';\nimport { html as hJSX } from 'snabbdom-jsx';\n\nexport { hJSX, Model, Event, Router, Component, Container, falcor, reaxtor };\n\nfunction reaxtor(RootClass, model) {\n\n    var working = false;\n    var reenter = false;\n    const array = new Array(2);\n    const models = new BehaviorSubject(model);\n    const previousOnChangesCompleted = model._root.onChangesCompleted;\n\n    model._root.onChangesCompleted = function() {\n        if (working) { return reenter = true; }\n        working = true;\n        do {\n            reenter = false;\n            // console.log('\\nstart top-down render ----> [');\n            if (previousOnChangesCompleted) {\n                previousOnChangesCompleted.call(this);\n            }\n            models.next(model = this);\n            // console.log('] <---- end top-down render\\n');\n        } while(reenter === true);\n    };\n\n    return new RootClass({ models }).map((rootVDom) => {\n        working = false;\n        array[0] = model;\n        array[1] = rootVDom;\n        return array;\n    });\n}\n"]}