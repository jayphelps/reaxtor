{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAUA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAbA,uBAAW,SAAX,CAAqB,MAArB,GAA8B,uBAAW,SAAX,CAAqB,IAArB;;AAC9B,uBAAW,SAAX,CAAqB,OAArB,GAA+B,uBAAW,SAAX,CAAqB,KAArB;AAC/B,uBAAW,SAAX,CAAqB,WAArB,GAAmC,uBAAW,SAAX,CAAqB,QAArB;;AAEnC,iBAAQ,SAAR,CAAkB,MAAlB,GAA2B,iBAAQ,SAAR,CAAkB,IAAlB;AAC3B,iBAAQ,SAAR,CAAkB,OAAlB,GAA4B,iBAAQ,SAAR,CAAkB,KAAlB;AAC5B,iBAAQ,SAAR,CAAkB,WAAlB,GAAgC,iBAAQ,SAAR,CAAkB,QAAlB;;QASvB;QAAM;QAAO;QAAO;QAAQ;QAAW;QAAW;;;AAE3D,SAAS,OAAT,CAAiB,SAAjB,EAA4B,KAA5B,EAAmC;;AAE/B,QAAI,UAAU,KAAV,CAF2B;AAG/B,QAAI,UAAU,KAAV,CAH2B;;AAK/B,QAAM,SAAS,qCAAoB,CAAE,KAAF,CAApB,CAAT,CALyB;AAM/B,QAAM,6BAA6B,MAAM,KAAN,CAAY,kBAAZ,CANJ;;AAQ/B,UAAM,KAAN,CAAY,kBAAZ,GAAiC,YAAW;AACxC,YAAI,OAAJ,EAAa;AAAE,mBAAO,UAAU,IAAV,CAAT;SAAb;AACA,kBAAU,IAAV,CAFwC;AAGxC,WAAG;AACC,sBAAU,KAAV;;AADD,gBAGK,0BAAJ,EAAgC;AAC5B,2CAA2B,IAA3B,CAAgC,IAAhC,EAD4B;aAAhC;AAGA,mBAAO,IAAP,CAAY,CAAE,IAAF,CAAZ;;AAND,SAAH,QAQQ,YAAY,IAAZ,EAXgC;KAAX,CARF;;AAsB/B,WAAO,IAAI,SAAJ,CAAc,EAAE,cAAF,EAAd,EAA0B,EAA1B,CAA6B,YAAM;AACtC,kBAAU,KAAV,CADsC;KAAN,CAApC,CAtB+B;CAAnC","file":"index.js","sourcesContent":["/** @jsx hJSX */\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/observable/defer';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/combineLatest';\n\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nSubscriber.prototype.onNext = Subscriber.prototype.next;\nSubscriber.prototype.onError = Subscriber.prototype.error;\nSubscriber.prototype.onCompleted = Subscriber.prototype.complete;\n\nSubject.prototype.onNext = Subject.prototype.next;\nSubject.prototype.onError = Subject.prototype.error;\nSubject.prototype.onCompleted = Subject.prototype.complete;\n\nimport Router from 'falcor-router';\nimport { Model } from './Model';\nimport { Event } from './Event';\nimport { Component } from './Component';\nimport { Container } from './Container';\nimport { html as hJSX } from 'snabbdom-jsx';\n\nexport { hJSX, Model, Event, Router, Component, Container, reaxtor };\n\nfunction reaxtor(RootClass, model) {\n\n    var working = false;\n    var reenter = false;\n\n    const models = new BehaviorSubject([ model ]);\n    const previousOnChangesCompleted = model._root.onChangesCompleted;\n\n    model._root.onChangesCompleted = function() {\n        if (working) { return reenter = true; }\n        working = true;\n        do {\n            reenter = false;\n            // console.log('\\nstart top-down render ----> [');\n            if (previousOnChangesCompleted) {\n                previousOnChangesCompleted.call(this);\n            }\n            models.next([ this ]);\n            // console.log('] <---- end top-down render\\n');\n        } while(reenter === true);\n    };\n\n    return new RootClass({ models }).do(() => {\n        working = false;\n    });\n}\n"]}