{"version":3,"sources":["../src/Changes.js"],"names":[],"mappings":"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","file":"Changes.js","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nconst  { isArray } = Array;\n\nimport { asap } from 'rxjs/scheduler/asap';\nimport { tryCatch } from 'rxjs/util/tryCatch';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { errorObject } from 'rxjs/util/errorObject';\n\nObservable.pairs = observablePairs;\nObservable.prototype.inspectTime = inspectTime;\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n\nexport class Changes extends Observable {\n    constructor(subscribe) {\n        super(subscribe);\n        this.nextVal = null;\n        this.errorVal = null;\n        this.hasValue = false;\n        this.hasError = false;\n        this.subscribers = [];\n        this.subscription = null;\n        this.hasCompleted = false;\n    }\n    static from(source) {\n        const observable = new Changes();\n        observable.source = source;\n        return observable;\n    }\n    next(x) {\n        this.nextVal = x;\n        this.hasValue = true;\n        const subscribers = this.subscribers.slice(0);\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].next(x);\n        }\n    }\n    error(e) {\n        this.errorVal = e;\n        this.hasError = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].error(e);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].complete();\n        }\n    }\n    _subscribe(subscriber) {\n\n        const { subscribers } = this;\n\n        subscribers.push(subscriber);\n\n        if (subscribers.length === 1) {\n            this.subscription = this.source.subscribe(this);\n        } else if (this.hasError) {\n            subscriber.error(this.errorVal);\n        } else if (this.hasCompleted) {\n            subscriber.complete();\n        } else if (this.hasValue) {\n            subscriber.next(this.nextVal);\n        }\n\n        return new Subscription(() => {\n            const index = subscribers.indexOf(subscriber);\n            if (~index) { subscribers.splice(index, 1); }\n            if (subscribers.length === 0) {\n                const subscription = this.subscription;\n                this.subscription = null;\n                subscription.unsubscribe();\n            }\n        });\n    }\n    deref(...keys) {\n        return this.lift(new DerefOperator(isArray(keys[0]) ? keys[0] : keys));\n    }\n}\n\nclass DerefOperator {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    call(subscriber) {\n        return new DerefSubscriber(subscriber, this.keys);\n    }\n}\n\nclass DerefSubscriber extends Subscriber {\n    constructor(destination, keys) {\n        super(destination);\n        this.keys = keys;\n    }\n    _next(update) {\n\n        const keys = this.keys;\n        const count = keys.length;\n        let keysIdx = -1;\n        let [ model, state ] = update;\n\n        while (++keysIdx < count) {\n            const key = keys[keysIdx];\n            if (!state.hasOwnProperty(key)) {\n                return;\n            }\n            model = tryCatch(model.deref).call(model, state = state[key]);\n            if (model === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n\n        update = update.slice(0);\n        update[0] = model;\n        update[1] = state;\n\n        super._next(update);\n    }\n}\n\nfunction observablePairs(obj) {\n    return Observable.create(function subscribe(subscriber) {\n        const arr = Array.isArray(obj);\n        const keys = arr ? obj : Object.keys(obj);\n        const count = keys.length;\n        let index = -1;\n        while (!subscriber.isUnsubscribed && ++index < count) {\n            const key = arr ? index : keys[index];\n            subscriber.next([key, obj[key]]);\n        }\n        subscriber.complete();\n    });\n}\n\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber) {\n        return new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector);\n    }\n}\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        const keySelector = this.keySelector;\n        let key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        let result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n\nfunction inspectTime(delay, scheduler = asap) {\n    return this.lift(new InspectTimeOperator(delay, scheduler));\n}\n\nclass InspectTimeOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n\n    call(subscriber) {\n        return new InspectTimeSubscriber(subscriber, this.delay, this.scheduler);\n    }\n}\n\nclass InspectTimeSubscriber extends Subscriber {\n\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.value = null;\n        this.hasValue = false;\n        this.scheduler = scheduler;\n    }\n\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(\n                this.clearThrottle.bind(this), this.delay, this\n            ));\n        }\n    }\n\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n}\n"]}