{"version":3,"sources":["../src/Changes.js"],"names":[],"mappings":"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","file":"Changes.js","sourcesContent":["const  { isArray } = Array;\n\nimport { asap } from 'rxjs/scheduler/asap';\nimport { tryCatch } from 'rxjs/util/tryCatch';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { errorObject } from 'rxjs/util/errorObject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { default as pathSyntax } from 'falcor-path-syntax';\n\nexport class Changes extends Observable {\n    constructor(subscribe) {\n        super(subscribe);\n        this.nextVal = null;\n        this.errorVal = null;\n        this.hasValue = false;\n        this.hasError = false;\n        this.subscribers = [];\n        this.subscription = null;\n        this.hasCompleted = false;\n    }\n    static from(source) {\n        const observable = new Changes();\n        observable.source = source;\n        return observable;\n    }\n    next(x) {\n        this.nextVal = x;\n        this.hasValue = true;\n        const subscribers = this.subscribers.slice(0);\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].next(x);\n        }\n    }\n    error(e) {\n        this.errorVal = e;\n        this.hasError = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].error(e);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].complete();\n        }\n    }\n    _subscribe(subscriber) {\n\n        const { subscribers } = this;\n\n        subscribers.push(subscriber);\n\n        if (subscribers.length === 1) {\n            this.subscription = this.source.subscribe(this);\n        } else if (this.hasError) {\n            subscriber.error(this.errorVal);\n        } else if (this.hasCompleted) {\n            subscriber.complete();\n        } else if (this.hasValue) {\n            subscriber.next(this.nextVal);\n        }\n\n        return new Subscription(() => {\n            const index = subscribers.indexOf(subscriber);\n            if (~index) { subscribers.splice(index, 1); }\n            if (subscribers.length === 0) {\n                const subscription = this.subscription;\n                this.subscription = null;\n                subscription.unsubscribe();\n            }\n        });\n    }\n    deref(...keys) {\n        if (keys.length === 1) {\n            if (isArray(keys[0])) {\n                keys = keys[0];\n            } else if(typeof keys[0] === 'string') {\n                keys = pathSyntax(keys[0]);\n            }\n        }\n        return this.lift(new DerefOperator(keys));\n    }\n}\n\nclass DerefOperator {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    call(subscriber) {\n        return new DerefSubscriber(subscriber, this.keys);\n    }\n}\n\nclass DerefSubscriber extends Subscriber {\n    constructor(destination, keys) {\n        super(destination);\n        this.keys = keys;\n    }\n    _next(update) {\n\n        const keys = this.keys;\n        const count = keys.length;\n        let keysIdx = -1;\n        let [ model, state ] = update;\n\n        while (++keysIdx < count) {\n            const key = keys[keysIdx];\n            if (!state.hasOwnProperty(key)) {\n                return;\n            }\n            model = tryCatch(model.deref).call(model, state = state[key]);\n            if (model === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n\n        update = update.slice(0);\n        update[0] = model;\n        update[1] = state;\n\n        super._next(update);\n    }\n}\n"]}