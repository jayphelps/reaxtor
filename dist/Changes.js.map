{"version":3,"sources":["../src/Changes.js"],"names":[],"mappings":"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","file":"Changes.js","sourcesContent":["const  { isArray } = Array;\n\nimport { asap } from 'rxjs/scheduler/asap';\nimport { tryCatch } from 'rxjs/util/tryCatch';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { errorObject } from 'rxjs/util/errorObject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { default as pathSyntax } from 'falcor-path-syntax';\n\nexport class Changes extends Observable {\n    constructor(subscribe) {\n        super(subscribe);\n        this.nextVal = null;\n        this.errorVal = null;\n        this.hasValue = false;\n        this.hasError = false;\n        this.subscribers = [];\n        this.subscription = null;\n        this.hasCompleted = false;\n    }\n    static from(source) {\n        const observable = new Changes();\n        observable.source = source;\n        return observable;\n    }\n    next(x) {\n        this.nextVal = x;\n        this.hasValue = true;\n        const subscribers = this.subscribers.slice(0);\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].next(x);\n        }\n    }\n    error(e) {\n        this.errorVal = e;\n        this.hasError = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].error(e);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].complete();\n        }\n    }\n    _subscribe(subscriber) {\n\n        const { subscribers } = this;\n\n        subscribers.push(subscriber);\n\n        if (subscribers.length === 1) {\n            this.subscription = this.source.subscribe(this);\n        } else if (this.hasError) {\n            subscriber.error(this.errorVal);\n        } else if (this.hasCompleted) {\n            subscriber.complete();\n        } else if (this.hasValue) {\n            subscriber.next(this.nextVal);\n        }\n\n        return new Subscription(() => {\n            const index = subscribers.indexOf(subscriber);\n            if (~index) { subscribers.splice(index, 1); }\n            if (subscribers.length === 0) {\n                const subscription = this.subscription;\n                this.subscription = null;\n                subscription.unsubscribe();\n            }\n        });\n    }\n    deref(...keys) {\n        if (keys.length === 1) {\n            if (isArray(keys[0])) {\n                keys = keys[0];\n            } else if(typeof keys[0] === 'string') {\n                keys = pathSyntax(keys[0]);\n            }\n        }\n        return this.lift(new DerefOperator(keys));\n    }\n}\n\nclass DerefOperator {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    call(subscriber, source) {\n        return source._subscribe(new DerefSubscriber(subscriber, this.keys));\n    }\n}\n\nclass DerefSubscriber extends Subscriber {\n    constructor(destination, keys) {\n        super(destination);\n        this.keys = keys;\n    }\n    _next(update) {\n\n        const keys = this.keys;\n        const count = keys.length;\n        let keysIdx = -1;\n        let [ model, state ] = update;\n\n        while (++keysIdx < count) {\n            const key = keys[keysIdx];\n            if (!state.hasOwnProperty(key)) {\n                return;\n            }\n            model = tryCatch(model.deref).call(model, state = state[key]);\n            if (model === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n\n        update = update.slice(0);\n        update[0] = model;\n        update[1] = state;\n\n        super._next(update);\n    }\n}\n"]}