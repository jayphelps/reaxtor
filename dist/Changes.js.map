{"version":3,"sources":["../src/Changes.js"],"names":[],"mappings":"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","file":"Changes.js","sourcesContent":["const  { isArray } = Array;\n\nimport { asap } from 'rxjs/scheduler/asap';\nimport { tryCatch } from 'rxjs/util/tryCatch';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { errorObject } from 'rxjs/util/errorObject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { default as pathSyntax } from 'falcor-path-syntax';\n\nexport class Changes extends Observable {\n    constructor(subscribe) {\n        super(subscribe);\n        this.nextVal = null;\n        this.errorVal = null;\n        this.hasValue = false;\n        this.hasError = false;\n        this.subscribers = [];\n        this.subscription = null;\n        this.hasCompleted = false;\n    }\n    static from(source) {\n        const observable = new Changes();\n        observable.source = source;\n        return observable;\n    }\n    next(x) {\n        this.nextVal = x;\n        this.hasValue = true;\n        const subscribers = this.subscribers.slice(0);\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].next(x);\n        }\n    }\n    error(e) {\n        this.errorVal = e;\n        this.hasError = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].error(e);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        const subscribers = this.subscribers.slice(0);\n        this.subscribers = [];\n        const len = subscribers.length;\n        let index = -1;\n        while (++index < len) {\n            subscribers[index].complete();\n        }\n    }\n    _subscribe(subscriber) {\n\n        const { subscribers } = this;\n\n        subscribers.push(subscriber);\n\n        if (subscribers.length === 1) {\n            this.subscription = this.source.subscribe(this);\n        } else if (this.hasError) {\n            subscriber.error(this.errorVal);\n        } else if (this.hasCompleted) {\n            subscriber.complete();\n        } else if (this.hasValue) {\n            subscriber.next(this.nextVal);\n        }\n\n        return new Subscription(() => {\n            const index = subscribers.indexOf(subscriber);\n            if (~index) { subscribers.splice(index, 1); }\n            if (subscribers.length === 0) {\n                const subscription = this.subscription;\n                this.subscription = null;\n                subscription.unsubscribe();\n            }\n        });\n    }\n    deref(...keys) {\n        if (keys.length === 1) {\n            if (isArray(keys[0])) {\n                keys = keys[0];\n            } else if(typeof keys[0] === 'string') {\n                keys = pathSyntax(keys[0]);\n            }\n        }\n        return this.lift(new DerefOperator(keys));\n    }\n}\n\nclass DerefOperator {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    call(subscriber, source) {\n        return source._subscribe(new DerefSubscriber(subscriber, this.keys));\n    }\n}\n\nclass DerefSubscriber extends Subscriber {\n    constructor(destination, keys) {\n        super(destination);\n        this.keys = keys;\n    }\n    _next(update) {\n\n        const keys = this.keys;\n        const count = keys.length - 1;\n        let [ model, state ] = update;\n        let keysIdx = -1;\n\n        while (++keysIdx <= count) {\n            const key = keys[keysIdx];\n            if (state == null || typeof state !== 'object' || !state.hasOwnProperty(key)) {\n                model = model.clone({\n                    _path: model._path.concat(keys.slice(keysIdx))\n                });\n                break;\n            }\n            model = tryCatch(model.deref).call(model, state = state[key]);\n            if (model === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n\n        super._next(model);\n    }\n}\n"]}