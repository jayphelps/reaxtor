{"version":3,"sources":["../src/Model.js"],"names":[],"mappings":"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","file":"Model.js","sourcesContent":["import { Model as FalcorModel } from 'falcor';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPath, fromPathsOrPathValues } from 'falcor-path-syntax';\nimport InvalidateResponse from 'falcor/lib/response/InvalidateResponse';\n\nclass ObservableModelResponse extends Observable {\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n    lift(operator) {\n        const response = new ObservableModelResponse(this);\n        response.operator = operator;\n        return response;\n    }\n    _toJSONG() {\n        return new ObservableModelResponse(this.source._toJSONG());\n    }\n    progressively() {\n        return new ObservableModelResponse(this.source.progressively());\n    }\n}\n\nexport class Model extends FalcorModel {\n    /* implement inspect method for node's inspect utility */\n    inspect() {\n        return `{ v${this.getVersion()} ${JSON.stringify(this.getPath())} }`;\n    }\n    get(...getArgs) {\n        return new ObservableModelResponse(super.get.apply(\n            this, fromPathsOrPathValues(getArgs)));\n    }\n    set(...setArgs) {\n        return new ObservableModelResponse(super.set.apply(\n            this, fromPathsOrPathValues(setArgs)));\n    }\n    call(fnPath, fnArgs, refPaths, thisPaths) {\n        fnPath = fromPath(fnPath);\n        refPaths = refPaths && fromPathsOrPathValues(refPaths) || [];\n        thisPaths = thisPaths && fromPathsOrPathValues(thisPaths) || [];\n        return new ObservableModelResponse(super.call.call(this,\n            fnPath, fnArgs, refPaths, thisPaths\n        ));\n    }\n    getItems(thisPathsSelector = () => [['length']],\n             restPathsSelector = ({ json: { length }}) => []) {\n\n        const thisPaths = fromPathsOrPathValues(\n            [].concat(thisPathsSelector(this))\n        );\n\n        return (thisPaths.length === 0) ?\n            Observable.empty() :\n            this.get(...thisPaths).mergeMap((result) => {\n\n                const restPaths = fromPathsOrPathValues(\n                    [].concat(restPathsSelector(result))\n                );\n\n                return (restPaths.length === 0) ?\n                    Observable.of(result) :\n                    this.get(...thisPaths.concat(restPaths));\n            });\n    }\n    invalidateAsync(...invalidateArgs) {\n        return new ObservableModelResponse(new InvalidateResponse(\n            this, fromPathsOrPathValues(invalidateArgs)\n        ));\n    }\n    preload(...preloadArgs) {\n        return new ObservableModelResponse(super.preload.apply(\n            this, fromPathsOrPathValues(preloadArgs)));\n    }\n    getValue(...getValueArgs) {\n        return new ObservableModelResponse(super.getValue.apply(\n            this, fromPathsOrPathValues(getValueArgs)));\n    }\n    setValue(...setValueArgs) {\n        return new ObservableModelResponse(super.setValue.apply(\n            this, fromPathsOrPathValues(setValueArgs)));\n    }\n    _clone(opts) {\n        const clone = new Model(this);\n        for (let key in opts) {\n            const value = opts[key];\n            if (value === \"delete\") {\n                delete clone[key];\n            } else {\n                clone[key] = value;\n            }\n        }\n        if (clone._path.length > 0) {\n            clone.setCache = void 0;\n        }\n        return clone;\n    }\n}\n"]}