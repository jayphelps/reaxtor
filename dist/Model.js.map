{"version":3,"sources":["../src/Model.js"],"names":[],"mappings":"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","file":"Model.js","sourcesContent":["import { Model as FalcorModel } from 'falcor';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPath, fromPathsOrPathValues } from 'falcor-path-syntax';\nimport InvalidateResponse from 'falcor/lib/response/InvalidateResponse';\n\nclass ObservableModelResponse extends Observable {\n    constructor(source) {\n        super();\n        this.source = source;\n    }\n    lift(operator) {\n        const response = new ObservableModelResponse(this);\n        response.operator = operator;\n        return response;\n    }\n    _toJSONG() {\n        return new ObservableModelResponse(this.source._toJSONG());\n    }\n    progressively() {\n        return new ObservableModelResponse(this.source.progressively());\n    }\n}\n\nexport class Model extends FalcorModel {\n    /* implement inspect method for node's inspect utility */\n    inspect() {\n        return `{ v${this.getVersion()} ${JSON.stringify(this.getPath())} }`;\n    }\n    get(...getArgs) {\n        return new ObservableModelResponse(super.get.apply(\n            this, fromPathsOrPathValues(getArgs)));\n    }\n    set(...setArgs) {\n        return new ObservableModelResponse(super.set.apply(\n            this, fromPathsOrPathValues(setArgs)));\n    }\n    call(fnPath, fnArgs, refPaths, thisPaths) {\n        fnPath = fromPath(fnPath);\n        refPaths = refPaths && fromPathsOrPathValues(refPaths) || [];\n        thisPaths = thisPaths && fromPathsOrPathValues(thisPaths) || [];\n        return new ObservableModelResponse(super.call.call(this,\n            fnPath, fnArgs, refPaths, thisPaths\n        ));\n    }\n    getItems(thisPathsSelector = () => [['length']],\n             restPathsSelector = ({ json: { length }}) => []) {\n\n        const thisPaths = fromPathsOrPathValues(\n            [].concat(thisPathsSelector(this))\n        );\n\n        return (thisPaths.length === 0) ?\n            Observable.empty() :\n            this.get(...thisPaths).mergeMap((result) => {\n\n                const restPaths = fromPathsOrPathValues(\n                    [].concat(restPathsSelector(result))\n                );\n\n                return (restPaths.length === 0) ?\n                    Observable.of(result) :\n                    this.get(...thisPaths.concat(restPaths));\n            });\n    }\n    invalidateAsync(...invalidateArgs) {\n        return new ObservableModelResponse(new InvalidateResponse(\n            this, fromPathsOrPathValues(invalidateArgs)\n        ));\n    }\n    preload(...preloadArgs) {\n        return new ObservableModelResponse(super.preload.apply(\n            this, fromPathsOrPathValues(preloadArgs)));\n    }\n    getValue(...getValueArgs) {\n        return new ObservableModelResponse(super.getValue.apply(\n            this, fromPathsOrPathValues(getValueArgs)));\n    }\n    setValue(...setValueArgs) {\n        return new ObservableModelResponse(super.setValue.apply(\n            this, fromPathsOrPathValues(setValueArgs)));\n    }\n    _clone(opts) {\n        const clone = new Model(this);\n        for (let key in opts) {\n            const value = opts[key];\n            if (value === \"delete\") {\n                delete clone[key];\n            } else {\n                clone[key] = value;\n            }\n        }\n        if (clone._path.length > 0) {\n            clone.setCache = void 0;\n        }\n        return clone;\n    }\n}\n"]}