{"version":3,"sources":["../src/Component.js"],"names":[],"mappings":"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","file":"Component.js","sourcesContent":["import { Event } from './Event';\nimport { Changes } from './Changes';\nimport { isPromise } from 'rxjs/util/isPromise';\nimport { Observable } from 'rxjs/Observable';\nimport { $$observable } from 'rxjs/symbol/observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nconst  { isArray } = Array;\n\nexport class Component extends Observable {\n    constructor(attrs, createChild) {\n        if (typeof attrs === 'function') {\n            super(attrs);\n        } else if(isObservable(attrs)) {\n            super();\n            this.models = attrs;\n        } else {\n            super();\n            if (typeof attrs === 'object') {\n                if (createChild && !this.createChild) {\n                    this.createChild = createChild;\n                }\n                const models = attrs['models'];\n                delete attrs['models'];\n                for (const key in attrs) {\n                    if (attrs.hasOwnProperty(key)) {\n                        this[key] = attrs[key];\n                    }\n                }\n                if (isObservable(models)) {\n                    this.models = models;\n                }\n            }\n        }\n    }\n    set models(m) {\n\n        if (this.source) {\n            this.source.unsubscribe();\n        }\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        const updates = Changes.from(m\n            .distinctUntilChanged(\n                (...args) => !this.shouldComponentUpdate(...args),\n                (...args) => this.key = this.mapModelToKey(...args)\n            )\n            .switchMap(\n                (...args) => this.loader(...args),\n                (...args) => this.mapDataToProps(...args)\n            )\n            // .do(() => console.log('updated', this.key))\n            .switchMap((props) => this.events(props).startWith(props))\n        );\n\n        this.source = new ReplaySubject(1);\n\n        this.subscription = this.createChildren(updates)\n            .switchMap((...args) => toObservable(this.render(...args)), false)\n            // .do(() => console.log('rendered', this.key))\n            .subscribe(this.source);\n    }\n    createChildren(updates) {\n        return updates;\n    }\n    loader(props) {\n        return Observable.of({ json: {} });\n    }\n    events(props) {\n        return Observable.of(props);\n    }\n    render(props) {\n        return Observable.empty();\n    }\n    mapModelToKey([ model ]) {\n        return `${this.constructor.name} ${model.inspect()}`;\n    }\n    shouldComponentUpdate(currKey, nextKey) {\n        return currKey !== nextKey;\n    }\n    mapDataToProps([ model ], { json }) {\n        return [ model, json ];\n    }\n    listen(name) {\n        const subjects = this.subjects || (this.subjects = {});\n        const subject = subjects[name] || (subjects[name] = new Event());\n        subject.eventName = name;\n        return subject;\n    }\n    dispatch(name) {\n        const handlers = this.handlers || (this.handlers = {});\n        const responder = handlers[name] || (handlers[name] = this.trigger.bind(this, name));\n        responder.eventName = name;\n        return responder;\n    }\n    trigger(name, value) {\n        const subjects = this.subjects;\n        if (subjects) {\n            const subject = subjects[name];\n            if (subject) {\n                subject.next(value);\n            }\n        }\n    }\n    lift(operator) {\n        const component = new Component();\n        component.source = this;\n        component.operator = operator;\n        return component;\n    }\n}\n\nfunction toObservable(ish, skipNull) {\n    if (ish == null) {\n        return skipNull ? Observable.empty() : Observable.of(ish);\n    } else if(\n        isArray(ish)      ||\n        isPromise(ish)    ||\n        isObservable(ish) ||\n        typeof ish[$$observable] === 'function') {\n        return ish;\n    } else {\n        return Observable.of(ish);\n    }\n}\n\nfunction isObservable(ish) {\n    if (ish && typeof ish === 'object') {\n        return ish instanceof Observable;\n    }\n    return false;\n}\n"]}