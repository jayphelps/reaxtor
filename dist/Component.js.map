{"version":3,"sources":["../src/Component.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IACS,O,GAAY,K,CAAZ,O;;IAEI,S,WAAA,S;;;AACT,uBAAY,KAAZ,EAAmB,WAAnB,EAAgC;AAAA;;AAC5B,YAAI,OAAO,KAAP,KAAiB,UAArB,EAAiC;AAAA,qGACvB,KADuB;AAEhC,SAFD,MAEO,IAAG,aAAa,KAAb,CAAH,EAAwB;AAAA;;AAE3B,kBAAK,MAAL,GAAc,KAAd;AACH,SAHM,MAGA;AAAA;;AAEH,gBAAI,QAAO,KAAP,yCAAO,KAAP,OAAiB,QAArB,EAA+B;AAC3B,oBAAI,eAAe,CAAC,MAAK,WAAzB,EAAsC;AAClC,0BAAK,WAAL,GAAmB,WAAnB;AACH;AACD,oBAAM,SAAS,MAAM,QAAN,CAAf;AACA,uBAAO,MAAM,QAAN,CAAP;AACA,qBAAK,IAAM,GAAX,IAAkB,KAAlB,EAAyB;AACrB,wBAAI,MAAM,cAAN,CAAqB,GAArB,CAAJ,EAA+B;AAC3B,8BAAK,GAAL,IAAY,MAAM,GAAN,CAAZ;AACH;AACJ;AACD,oBAAI,aAAa,MAAb,CAAJ,EAA0B;AACtB,0BAAK,MAAL,GAAc,MAAd;AACH;AACJ;AACJ;AAvB2B;AAwB/B;;;;uCA+Bc,O,EAAS;AACpB,mBAAO,OAAP;AACH;;;+BACM,K,EAAO;AACV,mBAAO,wBAAW,EAAX,CAAc,EAAE,MAAM,EAAR,EAAd,CAAP;AACH;;;+BACM,K,EAAO;AACV,mBAAO,wBAAW,EAAX,CAAc,KAAd,CAAP;AACH;;;+BACM,K,EAAO;AACV,mBAAO,wBAAW,KAAX,EAAP;AACH;;;4CACwB;AAAA;;AAAA,gBAAT,KAAS;;AACrB,mBAAU,KAAK,WAAL,CAAiB,IAA3B,SAAmC,MAAM,OAAN,EAAnC;AACH;;;8CACqB,O,EAAS,O,EAAS;AACpC,mBAAO,YAAY,OAAnB;AACH;;;qDACmC;AAAA;;AAAA,gBAAnB,KAAmB;AAAA,gBAAR,IAAQ,SAAR,IAAQ;;AAChC,mBAAO,CAAE,KAAF,EAAS,IAAT,CAAP;AACH;;;+BACM,I,EAAM;AACT,gBAAM,WAAW,KAAK,QAAL,KAAkB,KAAK,QAAL,GAAgB,EAAlC,CAAjB;AACA,gBAAM,UAAU,SAAS,IAAT,MAAmB,SAAS,IAAT,IAAiB,kBAApC,CAAhB;AACA,oBAAQ,SAAR,GAAoB,IAApB;AACA,mBAAO,OAAP;AACH;;;iCACQ,I,EAAM;AACX,gBAAM,WAAW,KAAK,QAAL,KAAkB,KAAK,QAAL,GAAgB,EAAlC,CAAjB;AACA,gBAAM,YAAY,SAAS,IAAT,MAAmB,SAAS,IAAT,IAAiB,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAApC,CAAlB;AACA,sBAAU,SAAV,GAAsB,IAAtB;AACA,mBAAO,SAAP;AACH;;;gCACO,I,EAAM,K,EAAO;AACjB,gBAAM,WAAW,KAAK,QAAtB;AACA,gBAAI,QAAJ,EAAc;AACV,oBAAM,UAAU,SAAS,IAAT,CAAhB;AACA,oBAAI,OAAJ,EAAa;AACT,4BAAQ,IAAR,CAAa,KAAb;AACH;AACJ;AACJ;;;6BACI,Q,EAAU;AACX,gBAAM,YAAY,IAAI,SAAJ,EAAlB;AACA,sBAAU,MAAV,GAAmB,IAAnB;AACA,sBAAU,QAAV,GAAqB,QAArB;AACA,mBAAO,SAAP;AACH;;;0BA7EU,M,EAAQ;AAAA;;AAEf,gBAAI,KAAK,MAAT,EAAiB;AACb,qBAAK,MAAL,CAAY,WAAZ;AACH;;AAED,gBAAI,KAAK,YAAT,EAAuB;AACnB,qBAAK,YAAL,CAAkB,WAAlB;AACH;;AAED,gBAAM,UAAU,iBAAQ,IAAR,CAAa,OACxB,oBADwB,CAErB;AAAA,uBAAa,CAAC,OAAK,qBAAL,yBAAd;AAAA,aAFqB,EAGrB;AAAA,uBAAa,OAAK,GAAL,GAAW,OAAK,aAAL,yBAAxB;AAAA,aAHqB,EAKxB,SALwB,CAMrB;AAAA,uBAAa,OAAK,MAAL,yBAAb;AAAA,aANqB,EAOrB;AAAA,uBAAa,OAAK,cAAL,yBAAb;AAAA,aAPqB;;AAAA,aAUxB,SAVwB,CAUd,UAAC,KAAD;AAAA,uBAAW,OAAK,MAAL,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,KAA7B,CAAX;AAAA,aAVc,CAAb,CAAhB;;AAaA,iBAAK,MAAL,GAAc,iCAAkB,CAAlB,CAAd;;AAEA,iBAAK,YAAL,GAAoB,KAAK,cAAL,CAAoB,OAApB,EACf,SADe,CACL;AAAA,uBAAa,aAAa,OAAK,MAAL,yBAAb,CAAb;AAAA,aADK,EAC4C,KAD5C;;AAAA,aAGf,SAHe,CAGL,KAAK,MAHA,CAApB;AAIH;;;;;;AAmDL,SAAS,YAAT,CAAsB,GAAtB,EAA2B,QAA3B,EAAqC;AACjC,QAAI,OAAO,IAAX,EAAiB;AACb,eAAO,WAAW,wBAAW,KAAX,EAAX,GAAgC,wBAAW,EAAX,CAAc,GAAd,CAAvC;AACH,KAFD,MAEO,IACH,QAAQ,GAAR,KACA,0BAAU,GAAV,CADA,IAEA,aAAa,GAAb,CAFA,IAGA,OAAO,6BAAP,KAA6B,UAJ1B,EAIsC;AACzC,eAAO,GAAP;AACH,KANM,MAMA;AACH,eAAO,wBAAW,EAAX,CAAc,GAAd,CAAP;AACH;AACJ;;AAED,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACvB,QAAI,OAAO,QAAO,GAAP,yCAAO,GAAP,OAAe,QAA1B,EAAoC;AAChC,eAAO,sCAAP;AACH;AACD,WAAO,KAAP;AACH","file":"Component.js","sourcesContent":["import { Event } from './Event';\nimport { Changes } from './Changes';\nimport { isPromise } from 'rxjs/util/isPromise';\nimport { Observable } from 'rxjs/Observable';\nimport { $$observable } from 'rxjs/symbol/observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nconst  { isArray } = Array;\n\nexport class Component extends Observable {\n    constructor(attrs, createChild) {\n        if (typeof attrs === 'function') {\n            super(attrs);\n        } else if(isObservable(attrs)) {\n            super();\n            this.models = attrs;\n        } else {\n            super();\n            if (typeof attrs === 'object') {\n                if (createChild && !this.createChild) {\n                    this.createChild = createChild;\n                }\n                const models = attrs['models'];\n                delete attrs['models'];\n                for (const key in attrs) {\n                    if (attrs.hasOwnProperty(key)) {\n                        this[key] = attrs[key];\n                    }\n                }\n                if (isObservable(models)) {\n                    this.models = models;\n                }\n            }\n        }\n    }\n    set models(models) {\n\n        if (this.source) {\n            this.source.unsubscribe();\n        }\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        const updates = Changes.from(models\n            .distinctUntilChanged(\n                (...args) => !this.shouldComponentUpdate(...args),\n                (...args) => this.key = this.mapModelToKey(...args)\n            )\n            .switchMap(\n                (...args) => this.loader(...args),\n                (...args) => this.mapDataToProps(...args)\n            )\n            // .do(() => console.log('updated', this.key))\n            .switchMap((props) => this.events(props).startWith(props))\n        );\n\n        this.source = new ReplaySubject(1);\n\n        this.subscription = this.createChildren(updates)\n            .switchMap((...args) => toObservable(this.render(...args)), false)\n            // .do(() => console.log('rendered', this.key))\n            .subscribe(this.source);\n    }\n    createChildren(updates) {\n        return updates;\n    }\n    loader(props) {\n        return Observable.of({ json: {} });\n    }\n    events(props) {\n        return Observable.of(props);\n    }\n    render(props) {\n        return Observable.empty();\n    }\n    mapModelToKey([ model ]) {\n        return `${this.constructor.name} ${model.inspect()}`;\n    }\n    shouldComponentUpdate(currKey, nextKey) {\n        return currKey !== nextKey;\n    }\n    mapDataToProps([ model ], { json }) {\n        return [ model, json ];\n    }\n    listen(name) {\n        const subjects = this.subjects || (this.subjects = {});\n        const subject = subjects[name] || (subjects[name] = new Event());\n        subject.eventName = name;\n        return subject;\n    }\n    dispatch(name) {\n        const handlers = this.handlers || (this.handlers = {});\n        const responder = handlers[name] || (handlers[name] = this.trigger.bind(this, name));\n        responder.eventName = name;\n        return responder;\n    }\n    trigger(name, value) {\n        const subjects = this.subjects;\n        if (subjects) {\n            const subject = subjects[name];\n            if (subject) {\n                subject.next(value);\n            }\n        }\n    }\n    lift(operator) {\n        const component = new Component();\n        component.source = this;\n        component.operator = operator;\n        return component;\n    }\n}\n\nfunction toObservable(ish, skipNull) {\n    if (ish == null) {\n        return skipNull ? Observable.empty() : Observable.of(ish);\n    } else if(\n        isArray(ish)      ||\n        isPromise(ish)    ||\n        isObservable(ish) ||\n        typeof ish[$$observable] === 'function') {\n        return ish;\n    } else {\n        return Observable.of(ish);\n    }\n}\n\nfunction isObservable(ish) {\n    if (ish && typeof ish === 'object') {\n        return ish instanceof Observable;\n    }\n    return false;\n}\n"]}