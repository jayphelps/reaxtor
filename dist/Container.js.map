{"version":3,"sources":["../src/Container.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEa,S,WAAA,S;;;;;;;;;;;mCACE,M,EAAQ;AAAA;;AACf,gBAAI,WAAW,EAAf;AACA,gBAAI,WAAW,EAAf;AACA,mBAAO,OAAO,SAAP,CAAiB,UAAC,KAAD,EAAW;AAC/B,oBAAM,SAAS,OAAK,KAAL,gBAAW,QAAX,EAAqB,QAArB,4BAAkC,KAAlC,GAAf;AACA,uBAAQ,OAAO,MAAP,KAAkB,CAAnB,GACH,uBAAW,EAAX,CAAc,KAAd,CADG,GAEH,uBAAW,aAAX,CACI,WAAW,MADf,EAEI;AAAA,sDAAI,IAAJ;AAAI,4BAAJ;AAAA;;AAAA,wDAAiB,KAAjB,GAA2B,IAA3B;AAAA,iBAFJ,CAFJ;AAMH,aARM,CAAP;AASH;;;8BACK,Q,EAAU,Q,EAAU,M,EAAQ,M,EAAsB;AAAA,gBAAd,GAAc,yDAAR,MAAQ;;;AAEpD,gBAAM,UAAU,CAAC,MAAM,OAAN,CAAc,GAAd,CAAD,KACX,UAAU,GAAX,IAAoB,QAAQ,GADhB,CAAhB;AAGA,gBAAM,SAAS,UAAU,IAAI,IAAJ,IAAY,CAAtB,GAA0B,CAAzC;AACA,gBAAM,KAAK,UAAU,IAAI,EAAJ,IAAW,IAAI,MAAJ,GAAa,CAAlC,GAAuC,IAAI,MAAJ,IAAc,MAAhE;;AAEA,gBAAI,QAAQ,CAAC,CAAb;AACA,gBAAI,QAAQ,KAAK,MAAjB;;AAEA,mBAAO,EAAE,KAAF,IAAW,KAAlB,EAAyB;AACrB,oBAAM,MAAM,WAAW,QAAQ,EAAnB,GACR,QAAQ,MADA,GAER,QAAQ,MAAR,IAAkB,IAAI,KAAJ,CAAlB,IAAgC,KAFpC;AAGA,oBAAI,CAAC,SAAS,KAAT,CAAL,EAAsB;AAClB,6BAAS,KAAT,IAAkB,sCAAlB;AACA,6BAAS,KAAT,IAAkB,KAAK,WAAL,CACd,SAAS,KAAT,CADc,EACG,KADH,EACU,GADV,EACe,OAAO,GAAP,CADf,CAAlB;AAGH;AACJ;;AAED,oBAAQ,QAAQ,CAAhB;AACA,qBAAS,MAAT,GAAkB,KAAlB;AACA,oBAAQ,SAAS,MAAjB;AACA,mBAAO,EAAE,KAAF,GAAU,KAAjB,EAAwB;AACpB,yBAAS,KAAT,EAAgB,QAAhB;AACH;;AAED,oBAAQ,CAAC,CAAT;AACA,oBAAQ,SAAS,MAAT,GAAkB,SAAS,MAAnC;AACA,mBAAO,EAAE,KAAF,GAAU,KAAjB,EAAwB;AACpB,oBAAM,QAAM,WAAW,QAAQ,EAAnB,GACR,QAAQ,MADA,GAER,QAAQ,MAAR,IAAkB,IAAI,KAAJ,CAAlB,IAAgC,KAFpC;AAGA,oBAAM,QAAQ,OAAO,KAAP,CAAd;AACA,oBAAI,SAAS,QAAO,KAAP,yCAAO,KAAP,OAAiB,QAA9B,EAAwC;AACpC,wBAAM,QAAQ,OAAO,KAAP,CAAa,KAAb,CAAd;AACA,6BAAS,KAAT,EAAgB,IAAhB,CAAqB,KAArB;AACH;AACJ;;AAED,mBAAO,QAAP;AACH","file":"Container.js","sourcesContent":["import { Component } from './Component';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport class Container extends Component {\n    initialize(models) {\n        var subjects = [];\n        var children = [];\n        return models.switchMap((tuple) => {\n            const active = this.deref(subjects, children, ...tuple);\n            return (active.length === 0) ?\n                Observable.of(tuple) :\n                Observable.combineLatest(\n                    children = active,\n                    (...kids) => [...tuple, ...kids]\n                );\n        });\n    }\n    deref(subjects, children, _model, _state, ids = _state) {\n\n        const isRange = !Array.isArray(ids) && (\n            ('from' in ids) || ('to' in ids)\n        );\n        const offset = isRange ? ids.from || 0 : 0;\n        const to = isRange ? ids.to || (ids.length + 1) : ids.length || offset;\n\n        let index = -1;\n        let count = to - offset;\n\n        while (++index <= count) {\n            const key = isRange || index > to ?\n                index + offset :\n                ids !== _state && ids[index] || index;\n            if (!subjects[index]) {\n                subjects[index] = new BehaviorSubject();\n                children[index] = this.createChild(\n                    subjects[index], index, key, _state[key]\n                );\n            }\n        }\n\n        index = count - 1;\n        children.length = count;\n        count = subjects.length;\n        while (++index < count) {\n            subjects[index].complete();\n        }\n\n        index = -1;\n        count = subjects.length = children.length;\n        while (++index < count) {\n            const key = isRange || index > to ?\n                index + offset :\n                ids !== _state && ids[index] || index;\n            const state = _state[key];\n            if (state && typeof state === 'object') {\n                const model = _model.deref(state);\n                subjects[index].next(model);\n            }\n        }\n\n        return children;\n    }\n}\n"]}