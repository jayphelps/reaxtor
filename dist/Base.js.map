{"version":3,"sources":["../src/Base.js"],"names":[],"mappings":"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","file":"Base.js","sourcesContent":["import { Event } from './Event';\nimport { Changes } from './Changes';\nimport { isPromise } from 'rxjs/util/isPromise';\nimport { Observable } from 'rxjs/Observable';\nimport { SymbolShim } from 'rxjs/util/SymbolShim';\nimport { ReplaySubject } from 'rxjs/subject/ReplaySubject';\nconst  { isArray } = Array;\n\nexport class Base extends Observable {\n    constructor(attrs, createChild) {\n        if (typeof attrs === 'function') {\n            super(attrs);\n        } else if(isObservable(attrs)) {\n            super();\n            this.models = attrs;\n        } else {\n            super();\n            if (typeof attrs === 'object') {\n                if (createChild && !this.createChild) {\n                    this.createChild = createChild;\n                }\n                const models = attrs['models'];\n                delete attrs['models'];\n                for (const key in attrs) {\n                    if (attrs.hasOwnProperty(key)) {\n                        this[key] = attrs[key];\n                    }\n                }\n                if (isObservable(models)) {\n                    this.models = models;\n                }\n            }\n        }\n    }\n    set models(m) {\n\n        if (this.source) {\n            this.source.unsubscribe();\n        }\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n\n        const updates = Changes.from(m\n            .distinctUntilChanged(\n                (...args) => !this.shouldComponentUpdate(...args),\n                (...args) => this.key = this.mapModelToKey(...args)\n            )\n            .switchMap(\n                (...args) => this.loader(...args),\n                (...args) => this.mapDataToProps(...args)\n            )\n            // .do(() => console.log('updated', this.key))\n            .switchMap((props) => this.events(props).startWith(props))\n        );\n\n        this.source = new ReplaySubject(1);\n\n        this.subscription = this.create(updates)\n            .switchMap((...args) => toObservable(this.render(...args)), false)\n            // .do(() => console.log('rendered', this.key))\n            .subscribe(this.source);\n    }\n    create(updates) {\n        return updates;\n    }\n    loader(props) {\n        return Observable.of({ json: {} });\n    }\n    events(props) {\n        return Observable.of(props);\n    }\n    render(props) {\n        return Observable.empty();\n    }\n    mapModelToKey([ model ]) {\n        return `${name} ${model.inspect()}`;\n    }\n    shouldComponentUpdate(currKey, nextKey) {\n        return currKey !== nextKey;\n    }\n    mapDataToProps([ model ], { json }) {\n        return [ model, json ];\n    }\n    listen(name) {\n        const subjects = this.subjects || (this.subjects = {});\n        const subject = subjects[name] || (subjects[name] = new Event());\n        subject.eventName = name;\n        return subject;\n    }\n    dispatch(name) {\n        const handlers = this.handlers || (this.handlers = {});\n        const responder = handlers[name] || (handlers[name] = this.trigger.bind(this, name));\n        responder.eventName = name;\n        return responder;\n    }\n    trigger(name, value) {\n        const subjects = this.subjects;\n        if (subjects) {\n            const subject = subjects[name];\n            if (subject) {\n                subject.next(value);\n            }\n        }\n    }\n    lift(operator) {\n        const component = new Base();\n        component.source = this;\n        component.operator = operator;\n        return component;\n    }\n}\n\nfunction toObservable(ish, skipNull) {\n    if (ish == null) {\n        return skipNull ? Observable.empty() : Observable.of(ish);\n    } else if(\n        isArray(ish)      ||\n        isPromise(ish)    ||\n        isObservable(ish) ||\n        typeof ish[SymbolShim.observable] === 'function') {\n        return ish;\n    } else {\n        return Observable.of(ish);\n    }\n}\n\nfunction isObservable(ish) {\n    if (ish && typeof ish === 'object') {\n        return ish instanceof Observable;\n    }\n    return false;\n}\n"]}